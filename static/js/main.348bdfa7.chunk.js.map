{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendItem/FriendItem.module.css","components/TransactionsHistory/TransactionsHistory.module.css","components/Container/Container.module.css","components/FriendList/FriendList.module.css","components/Container/Container.js","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendItem/FriendItem.js","components/FriendList/FriendList.js","components/TransactionsHistory/TransactionsHistory.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Profile","props","name","tag","location","avatar","stats","style","profile","description","src","alt","stats__items","label","quantity","followers","views","likes","Statistics","title","statistics","statList","map","stat","backgroundColor","Math","floor","random","toString","percentage","id","FriendItem","isOnline","item","on","off","width","FriendList","items","friendList","TransactionsHistory","transactionHistory","thead","type","amount","currency","App","user","statisticalData","friends","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.348bdfa7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__24qo0\",\"description\":\"Profile_description__-NNdc\",\"avatar\":\"Profile_avatar__2xqFE\",\"name\":\"Profile_name__5F_ES\",\"tag\":\"Profile_tag__3xNKQ\",\"location\":\"Profile_location__RLIEs\",\"stats\":\"Profile_stats__oAxwo\",\"stats__items\":\"Profile_stats__items__2HHGF\",\"label\":\"Profile_label__2_sfP\",\"quantity\":\"Profile_quantity__1H0DM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1JbI2\",\"title\":\"Statistics_title__26YyJ\",\"statList\":\"Statistics_statList__SdZit\",\"stat\":\"Statistics_stat__3lvEl\",\"percentage\":\"Statistics_percentage__3G7Zt\",\"box\":\"Statistics_box__1acLw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendItem_item__wAU23\",\"avatar\":\"FriendItem_avatar__3CeYw\",\"name\":\"FriendItem_name__3jqh1\",\"on\":\"FriendItem_on__2WaLN\",\"off\":\"FriendItem_off__2mO30\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionsHistory_transactionHistory__20u0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3Tpx-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__jLt6K\"};","//импорт стиля контейнера\r\nimport s from 'components/Container/Container.module.css';\r\n\r\n\r\n//сам контейнер\r\nexport default function Container ({children}) {\r\n    return (\r\n    <section className = {s.container}>{children}</section>\r\n    );\r\n}\r\n\r\n","import PropTypes from 'prop-types'; // типы пропов импорт почти везде где прописываем их\r\nimport style from 'components/Profile/Profile.module.css';// стиль\r\n\r\nexport default function Profile (props) {\r\n    const {name, tag, location, avatar, stats} = props;//деструктуризация пропов\r\n    return (//вставляем в дефолтную разметку классы и пропы\r\n        <div className={style.profile}>\r\n  <div className={style.description}>\r\n    <img\r\n      src={avatar}\r\n      alt=\"Аватар пользователя\"\r\n      className={style.avatar}\r\n    />\r\n    <p className={style.name}>{name}</p>\r\n    <p className={style.tag}>@{tag}</p>\r\n    <p className={style.location}>{location}</p>\r\n  </div>\r\n\r\n  <ul className={style.stats}>\r\n    <li className={style.stats__items}>\r\n      <span className={style.label}>Followers</span>\r\n      <span className={style.quantity}>{stats.followers}</span>\r\n    </li>\r\n    <li className={style.stats__items}>\r\n      <span className={style.label}>Views</span>\r\n      <span className={style.quantity}>{stats.views}</span>\r\n    </li>\r\n    <li className={style.stats__items}>\r\n      <span className={style.label}>Likes</span>\r\n      <span className={style.quantity}>{stats.likes}</span>\r\n    </li>\r\n  </ul>\r\n</div>\r\n    );\r\n}\r\n\r\n//типы пропов\r\nProfile.propTypes ={\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    stats: PropTypes.shape({\r\n        followers: PropTypes.number.isRequired,\r\n        views: PropTypes.number.isRequired,\r\n        likes: PropTypes.number.isRequired\r\n    })\r\n}","import PropTypes from 'prop-types';// типы пропов импорт почти везде где прописываем их\r\n\r\nimport style from 'components/Statistics/Statistics.module.css';// стиль\r\n\r\nexport default function Statistics({title, stats}) {\r\n    const getColor = () =>\r\n    \"#\" + Math.floor(Math.random() * 16777215).toString(16);//случайный цвет\r\n\r\n    return (//мапаем массив и применяем дефолтную разметку\r\n        <section className={style.statistics}>\r\n  {title && <h2 className={style.title}>{title}</h2>}\r\n\r\n  <ul className={style.statList}>\r\n      {stats.map(stat =>(\r\n          <li className={style.stat} key={stat.id} style={{backgroundColor: `${getColor()}`}}>\r\n          <span className={style.label}>{stat.label}</span>\r\n          <span className={style.percentage}>{stat.percentage} %</span>\r\n        </li>\r\n      ))}\r\n    \r\n    \r\n  </ul>\r\n</section>\r\n    );\r\n\r\n}\r\n\r\n//типы пропов\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stat: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        percentage: PropTypes.string.isRequired,\r\n    }),\r\n}","import PropTypes from 'prop-types';// типы пропов импорт почти везде где прописываем их\r\nimport style from 'components/FriendItem/FriendItem.module.css';// стиль\r\n\r\nexport default function FriendItem(props) {//вставляем пропы в дефолтную разметку пункта списка(именно пункта) и делаем проверку на онлайн\r\n    const{ avatar, name, isOnline} = props;\r\n    return (\r\n        <li className={style.item}>\r\n            <span className={isOnline ? style.on : style.off}></span>\r\n            <img className={style.avatar} src={avatar} alt=\"Friend_avatar\" width=\"48\" />\r\n            <p className={style.name}>{name}</p>\r\n        </li>\r\n    );\r\n}\r\n\r\n//типы пропов\r\nFriendItem.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n}","import PropTypes from 'prop-types';// типы пропов импорт почти везде где прописываем их\r\nimport style from './FriendList.module.css';// стиль\r\n\r\nimport FriendItem from 'components/FriendItem/FriendItem';// импорт компонета пункт списка\r\n\r\nexport default function FriendList ({items}) {//сам список, сюда лепим как выглядят пункты\r\n\r\n    return (\r\n        <ul className={style.friendList}>\r\n            {items.map(item => (\r\n                <FriendItem \r\n                avatar={item.avatar} \r\n                name={item.name} \r\n                isOnline={item.isOnline} \r\n                key={item.id}\r\n                />\r\n            ))}\r\n            \r\n        </ul>\r\n\r\n    )\r\n}\r\n//типы пропычей\r\nFriendList.propTypes = {\r\n    item: PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n    }),\r\n};","import PropTypes from 'prop-types';// типы пропов импорт почти везде где прописываем их\r\nimport style from 'components/TransactionsHistory/TransactionsHistory.module.css';//стиль наше все\r\n\r\nexport default function TransactionsHistory({items}) {//таблица (была дефолтной) + деструктуризация при мапе\r\n    return(\r\n        <table className={style.transactionHistory}>\r\n  <thead className={style.thead}>\r\n    <tr>\r\n      <th>Type</th>\r\n      <th>Amount</th>\r\n      <th>Currency</th>\r\n    </tr>\r\n  </thead>\r\n\r\n  <tbody>\r\n      {items.map(({id, type, amount, currency}) =>(\r\n        <tr key={id}>\r\n        <td>{type}</td>\r\n         <td>{amount}</td>\r\n         <td>{currency}</td>\r\n        </tr>\r\n      ))}\r\n   \r\n   \r\n  </tbody>\r\n</table>\r\n    );\r\n}\r\n// типы пропычамб\r\nTransactionsHistory.propTypes = {\r\n    items: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            type: PropTypes.string.isRequired,\r\n            amount: PropTypes.string.isRequired,\r\n            currency: PropTypes.string.isRequired,\r\n        }),\r\n    ).isRequired,\r\n}","//источники данных\r\nimport user from './API/user.json';\r\nimport friends from './API/friends.json';\r\nimport statisticalData from './API/statistical-data.json';\r\nimport transactions from './API/transactions.json';\r\n\r\n//компонямбы\r\nimport Container from 'components/Container/Container';\r\nimport Profile from 'components/Profile/Profile';\r\nimport Statistics from 'components/Statistics/Statistics';\r\nimport FriendList from 'components/FriendList/FriendList';\r\nimport TransactionsHistory from 'components/TransactionsHistory/TransactionsHistory';\r\n\r\nimport style from './App.css';\r\n\r\n\r\n//сборка на експорт в индекс .жс\r\n export default function App() {\r\n   return(\r\n     <Container>\r\n       <h2 className='mainTitle'>Profile</h2>\r\n       <Profile\r\n       name = {user.name}\r\n       tag = {user.tag}\r\n       location = {user.location}\r\n       avatar = {user.avatar}\r\n       stats = {user.stats}\r\n       />\r\n\r\n       <h2 className='mainTitle'>Statistics</h2>\r\n       <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n\r\n       <h2 className='mainTitle'>Friends</h2>\r\n       <FriendList items={friends}/>\r\n\r\n       <h2 className='mainTitle'>Transactions History</h2>\r\n       <TransactionsHistory items={transactions}/>\r\n\r\n\r\n\r\n\r\n     </Container>\r\n\r\n   )\r\n \r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport './index.css';\n\n//импорт всей сборки\nimport App from './App';\n\n\nReactDOM.render(//вот тут рендерится все\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}